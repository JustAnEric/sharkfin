name: Build and Release Python App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Step 4: Compile code with PyInstaller
      - name: Compile code with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon "assets\images\sharkfin.ico" --name "Sharkfin" --add-data "new.html;." --add-data "main.html;." --add-data "assets;assets/" --add-data "data;data/" --add-data "loader-themes;loader-themes/" --distpath ".\dist" .\main.py
          # Replace `your_script.py` with the name of your Python script

      # Step 5: Upload compiled artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-app
          path: dist/Sharkfin-raw-x64.exe
          # Replace `your_script.exe` with the name of the compiled executable

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Create a new release
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.head_commit.message }}
          release_name: Release v${{ github.event.head_commit.message }}
          body: |
            This release includes the compiled executable for Windows.
          draft: false
          # Not set as a prerelease unless the owner changes the release.
          prerelease: true

      # Step 3: Upload compiled artifact to the release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist/Sharkfin-raw-v${{ github.event.head_commit.message }}-x64.exe
          asset_name: Sharkfin-raw-v${{ github.event.head_commit.message }}-x64.exe
          asset_content_type: application/octet-stream
